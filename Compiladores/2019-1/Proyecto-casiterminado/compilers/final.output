Terminales no usados en la gramática

   MOSTRAR
   COM
   TRUEASSIGN
   ASSIGN
   SUM
   RES
   MUL
   DIV
   EVAL
   EQ
   NEQ
   LES
   MOR
   LEQ
   MEQ
   ITERLIMIT
   AND
   OR
   POW
   SQRT
   PROG
   VARS
   ELSE
   OTHERCASE
   DESDE
   HASTA
   AUMENTANDO


Gramática

    0 $accept: programa $end

    1 programa: lineas

    2 linea: estructura
    3      | ENTER

    4 lineas: linea lineas
    5       | linea

    6 estructura: comentario
    7           | while
    8           | for
    9           | ifelse
   10           | declaracion
   11           | print

   12 declaracion: definir ';'

   13 @1: %empty

   14 asignacion: '=' ID @1 expresion

   15 definir: asignacion ',' definir
   16        | asignacion

   17 expresion: '+' expresion expresion
   18          | '-' expresion expresion
   19          | producto

   20 producto: '*' expresion expresion
   21         | '/' expresion expresion
   22         | agrupacion

   23 agrupacion: '^' expresion expresion
   24           | RAIZ '(' expresion ')'
   25           | valor

   26 valor: NUM
   27      | ID
   28      | STRING

   29 $@2: %empty

   30 $@3: %empty

   31 ifelse: SI '(' lista_condicion ')' $@2 '{' $@3 lineas '}' else

   32 $@4: %empty

   33 else: SINO $@4 '{' lineas '}'

   34 lista_condicion: operadorlogico '(' lista_condicion ')' '(' lista_condicion ')'
   35                | condicion

   36 operadorlogico: '&'
   37               | '|' '|'

   38 condicion: orden condicion expresion
   39          | expresion

   40 orden: '=' '='
   41      | '!' '='
   42      | '<'
   43      | '>'
   44      | '=' '<'
   45      | '=' '>'

   46 @5: %empty

   47 @6: %empty

   48 $@7: %empty

   49 @8: %empty

   50 @9: %empty

   51 $@10: %empty

   52 $@11: %empty

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

   54 @12: %empty

   55 @13: %empty

   56 $@14: %empty

   57 $@15: %empty

   58 $@16: %empty

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' '{' $@15 lineas $@16 '}'

   60 @17: %empty

   61 $@18: %empty

   62 @19: %empty

   63 print: ID @17 '(' valor $@18 ')' @19 ';'

   64 comentario: '#' comen '$'

   65 comen: comen ID
   66      | comen SI
   67      | comen SINO
   68      | comen PARA
   69      | comen MIENTRAS
   70      | comen RAIZ
   71      | comen ','
   72      | comen ENTER
   73      | %empty


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 41
'#' (35) 64
'$' (36) 64
'&' (38) 36
'(' (40) 24 31 34 53 59 63
')' (41) 24 31 34 53 59 63
'*' (42) 20
'+' (43) 17
',' (44) 15 71
'-' (45) 18
'/' (47) 21
';' (59) 12 53 63
'<' (60) 42 44
'=' (61) 14 40 41 44 45
'>' (62) 43 45
'^' (94) 23
'{' (123) 31 33 53 59
'|' (124) 37
'}' (125) 31 33 53 59
error (256)
ID (258) 14 27 63 65
NUM (259) 26
RAIZ (260) 24 70
SI (261) 31 66
SINO (262) 33 67
PARA (263) 53 68
MIENTRAS (264) 59 69
MOSTRAR (265)
ENTER (266) 3 72
COM (267)
STRING (268) 28
TRUEASSIGN (269)
ASSIGN (270)
SUM (271)
RES (272)
MUL (273)
DIV (274)
EVAL (275)
EQ (276)
NEQ (277)
LES (278)
MOR (279)
LEQ (280)
MEQ (281)
ITERLIMIT (282)
AND (283)
OR (284)
POW (285)
SQRT (286)
PROG (287)
VARS (288)
ELSE (289)
OTHERCASE (290)
DESDE (291)
HASTA (292)
AUMENTANDO (293)


No terminales con las reglas donde aparecen

$accept (58)
    en la izquierda: 0
programa (59)
    en la izquierda: 1, en la derecha: 0
linea (60)
    en la izquierda: 2 3, en la derecha: 4 5
lineas (61)
    en la izquierda: 4 5, en la derecha: 1 4 31 33 53 59
estructura (62)
    en la izquierda: 6 7 8 9 10 11, en la derecha: 2
declaracion (63)
    en la izquierda: 12, en la derecha: 10
asignacion (64)
    en la izquierda: 14, en la derecha: 15 16 53
@1 (65)
    en la izquierda: 13, en la derecha: 14
definir (66)
    en la izquierda: 15 16, en la derecha: 12 15
expresion (67)
    en la izquierda: 17 18 19, en la derecha: 14 17 18 20 21 23 24
    38 39
producto (68)
    en la izquierda: 20 21 22, en la derecha: 19
agrupacion (69)
    en la izquierda: 23 24 25, en la derecha: 22
valor (70)
    en la izquierda: 26 27 28, en la derecha: 25 63
ifelse (71)
    en la izquierda: 31, en la derecha: 9
$@2 (72)
    en la izquierda: 29, en la derecha: 31
$@3 (73)
    en la izquierda: 30, en la derecha: 31
else (74)
    en la izquierda: 33, en la derecha: 31
$@4 (75)
    en la izquierda: 32, en la derecha: 33
lista_condicion (76)
    en la izquierda: 34 35, en la derecha: 31 34 59
operadorlogico (77)
    en la izquierda: 36 37, en la derecha: 34
condicion (78)
    en la izquierda: 38 39, en la derecha: 35 38 53
orden (79)
    en la izquierda: 40 41 42 43 44 45, en la derecha: 38
for (80)
    en la izquierda: 53, en la derecha: 8
@5 (81)
    en la izquierda: 46, en la derecha: 53
@6 (82)
    en la izquierda: 47, en la derecha: 53
$@7 (83)
    en la izquierda: 48, en la derecha: 53
@8 (84)
    en la izquierda: 49, en la derecha: 53
@9 (85)
    en la izquierda: 50, en la derecha: 53
$@10 (86)
    en la izquierda: 51, en la derecha: 53
$@11 (87)
    en la izquierda: 52, en la derecha: 53
while (88)
    en la izquierda: 59, en la derecha: 7
@12 (89)
    en la izquierda: 54, en la derecha: 59
@13 (90)
    en la izquierda: 55, en la derecha: 59
$@14 (91)
    en la izquierda: 56, en la derecha: 59
$@15 (92)
    en la izquierda: 57, en la derecha: 59
$@16 (93)
    en la izquierda: 58, en la derecha: 59
print (94)
    en la izquierda: 63, en la derecha: 11
@17 (95)
    en la izquierda: 60, en la derecha: 63
$@18 (96)
    en la izquierda: 61, en la derecha: 63
@19 (97)
    en la izquierda: 62, en la derecha: 63
comentario (98)
    en la izquierda: 64, en la derecha: 6
comen (99)
    en la izquierda: 65 66 67 68 69 70 71 72 73, en la derecha: 64
    65 66 67 68 69 70 71 72


Estado 0

    0 $accept: . programa $end

    ID        desplazar e ir al estado 1
    SI        desplazar e ir al estado 2
    PARA      desplazar e ir al estado 3
    MIENTRAS  desplazar e ir al estado 4
    ENTER     desplazar e ir al estado 5
    '='       desplazar e ir al estado 6
    '#'       desplazar e ir al estado 7

    programa     ir al estado 8
    linea        ir al estado 9
    lineas       ir al estado 10
    estructura   ir al estado 11
    declaracion  ir al estado 12
    asignacion   ir al estado 13
    definir      ir al estado 14
    ifelse       ir al estado 15
    for          ir al estado 16
    while        ir al estado 17
    print        ir al estado 18
    comentario   ir al estado 19


Estado 1

   63 print: ID . @17 '(' valor $@18 ')' @19 ';'

    $default  reduce usando la regla 60 (@17)

    @17  ir al estado 20


Estado 2

   31 ifelse: SI . '(' lista_condicion ')' $@2 '{' $@3 lineas '}' else

    '('  desplazar e ir al estado 21


Estado 3

   53 for: PARA . '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    '('  desplazar e ir al estado 22


Estado 4

   59 while: MIENTRAS . '(' @12 lista_condicion @13 $@14 ')' '{' $@15 lineas $@16 '}'

    '('  desplazar e ir al estado 23


Estado 5

    3 linea: ENTER .

    $default  reduce usando la regla 3 (linea)


Estado 6

   14 asignacion: '=' . ID @1 expresion

    ID  desplazar e ir al estado 24


Estado 7

   64 comentario: '#' . comen '$'

    $default  reduce usando la regla 73 (comen)

    comen  ir al estado 25


Estado 8

    0 $accept: programa . $end

    $end  desplazar e ir al estado 26


Estado 9

    4 lineas: linea . lineas
    5       | linea .

    ID        desplazar e ir al estado 1
    SI        desplazar e ir al estado 2
    PARA      desplazar e ir al estado 3
    MIENTRAS  desplazar e ir al estado 4
    ENTER     desplazar e ir al estado 5
    '='       desplazar e ir al estado 6
    '#'       desplazar e ir al estado 7

    $default  reduce usando la regla 5 (lineas)

    linea        ir al estado 9
    lineas       ir al estado 27
    estructura   ir al estado 11
    declaracion  ir al estado 12
    asignacion   ir al estado 13
    definir      ir al estado 14
    ifelse       ir al estado 15
    for          ir al estado 16
    while        ir al estado 17
    print        ir al estado 18
    comentario   ir al estado 19


Estado 10

    1 programa: lineas .

    $default  reduce usando la regla 1 (programa)


Estado 11

    2 linea: estructura .

    $default  reduce usando la regla 2 (linea)


Estado 12

   10 estructura: declaracion .

    $default  reduce usando la regla 10 (estructura)


Estado 13

   15 definir: asignacion . ',' definir
   16        | asignacion .

    ','  desplazar e ir al estado 28

    $default  reduce usando la regla 16 (definir)


Estado 14

   12 declaracion: definir . ';'

    ';'  desplazar e ir al estado 29


Estado 15

    9 estructura: ifelse .

    $default  reduce usando la regla 9 (estructura)


Estado 16

    8 estructura: for .

    $default  reduce usando la regla 8 (estructura)


Estado 17

    7 estructura: while .

    $default  reduce usando la regla 7 (estructura)


Estado 18

   11 estructura: print .

    $default  reduce usando la regla 11 (estructura)


Estado 19

    6 estructura: comentario .

    $default  reduce usando la regla 6 (estructura)


Estado 20

   63 print: ID @17 . '(' valor $@18 ')' @19 ';'

    '('  desplazar e ir al estado 30


Estado 21

   31 ifelse: SI '(' . lista_condicion ')' $@2 '{' $@3 lineas '}' else

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '='     desplazar e ir al estado 35
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40
    '&'     desplazar e ir al estado 41
    '|'     desplazar e ir al estado 42
    '!'     desplazar e ir al estado 43
    '<'     desplazar e ir al estado 44
    '>'     desplazar e ir al estado 45

    expresion        ir al estado 46
    producto         ir al estado 47
    agrupacion       ir al estado 48
    valor            ir al estado 49
    lista_condicion  ir al estado 50
    operadorlogico   ir al estado 51
    condicion        ir al estado 52
    orden            ir al estado 53


Estado 22

   53 for: PARA '(' . asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    '='  desplazar e ir al estado 6

    asignacion  ir al estado 54


Estado 23

   59 while: MIENTRAS '(' . @12 lista_condicion @13 $@14 ')' '{' $@15 lineas $@16 '}'

    $default  reduce usando la regla 54 (@12)

    @12  ir al estado 55


Estado 24

   14 asignacion: '=' ID . @1 expresion

    $default  reduce usando la regla 13 (@1)

    @1  ir al estado 56


Estado 25

   64 comentario: '#' comen . '$'
   65 comen: comen . ID
   66      | comen . SI
   67      | comen . SINO
   68      | comen . PARA
   69      | comen . MIENTRAS
   70      | comen . RAIZ
   71      | comen . ','
   72      | comen . ENTER

    ID        desplazar e ir al estado 57
    RAIZ      desplazar e ir al estado 58
    SI        desplazar e ir al estado 59
    SINO      desplazar e ir al estado 60
    PARA      desplazar e ir al estado 61
    MIENTRAS  desplazar e ir al estado 62
    ENTER     desplazar e ir al estado 63
    ','       desplazar e ir al estado 64
    '$'       desplazar e ir al estado 65


Estado 26

    0 $accept: programa $end .

    $default  aceptar


Estado 27

    4 lineas: linea lineas .

    $default  reduce usando la regla 4 (lineas)


Estado 28

   15 definir: asignacion ',' . definir

    '='  desplazar e ir al estado 6

    asignacion  ir al estado 13
    definir     ir al estado 66


Estado 29

   12 declaracion: definir ';' .

    $default  reduce usando la regla 12 (declaracion)


Estado 30

   63 print: ID @17 '(' . valor $@18 ')' @19 ';'

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    STRING  desplazar e ir al estado 34

    valor  ir al estado 67


Estado 31

   27 valor: ID .

    $default  reduce usando la regla 27 (valor)


Estado 32

   26 valor: NUM .

    $default  reduce usando la regla 26 (valor)


Estado 33

   24 agrupacion: RAIZ . '(' expresion ')'

    '('  desplazar e ir al estado 68


Estado 34

   28 valor: STRING .

    $default  reduce usando la regla 28 (valor)


Estado 35

   40 orden: '=' . '='
   44      | '=' . '<'
   45      | '=' . '>'

    '='  desplazar e ir al estado 69
    '<'  desplazar e ir al estado 70
    '>'  desplazar e ir al estado 71


Estado 36

   17 expresion: '+' . expresion expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 72
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 37

   18 expresion: '-' . expresion expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 73
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 38

   20 producto: '*' . expresion expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 74
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 39

   21 producto: '/' . expresion expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 75
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 40

   23 agrupacion: '^' . expresion expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 76
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 41

   36 operadorlogico: '&' .

    $default  reduce usando la regla 36 (operadorlogico)


Estado 42

   37 operadorlogico: '|' . '|'

    '|'  desplazar e ir al estado 77


Estado 43

   41 orden: '!' . '='

    '='  desplazar e ir al estado 78


Estado 44

   42 orden: '<' .

    $default  reduce usando la regla 42 (orden)


Estado 45

   43 orden: '>' .

    $default  reduce usando la regla 43 (orden)


Estado 46

   39 condicion: expresion .

    $default  reduce usando la regla 39 (condicion)


Estado 47

   19 expresion: producto .

    $default  reduce usando la regla 19 (expresion)


Estado 48

   22 producto: agrupacion .

    $default  reduce usando la regla 22 (producto)


Estado 49

   25 agrupacion: valor .

    $default  reduce usando la regla 25 (agrupacion)


Estado 50

   31 ifelse: SI '(' lista_condicion . ')' $@2 '{' $@3 lineas '}' else

    ')'  desplazar e ir al estado 79


Estado 51

   34 lista_condicion: operadorlogico . '(' lista_condicion ')' '(' lista_condicion ')'

    '('  desplazar e ir al estado 80


Estado 52

   35 lista_condicion: condicion .

    $default  reduce usando la regla 35 (lista_condicion)


Estado 53

   38 condicion: orden . condicion expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '='     desplazar e ir al estado 35
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40
    '!'     desplazar e ir al estado 43
    '<'     desplazar e ir al estado 44
    '>'     desplazar e ir al estado 45

    expresion   ir al estado 46
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49
    condicion   ir al estado 81
    orden       ir al estado 53


Estado 54

   53 for: PARA '(' asignacion . ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    ';'  desplazar e ir al estado 82


Estado 55

   59 while: MIENTRAS '(' @12 . lista_condicion @13 $@14 ')' '{' $@15 lineas $@16 '}'

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '='     desplazar e ir al estado 35
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40
    '&'     desplazar e ir al estado 41
    '|'     desplazar e ir al estado 42
    '!'     desplazar e ir al estado 43
    '<'     desplazar e ir al estado 44
    '>'     desplazar e ir al estado 45

    expresion        ir al estado 46
    producto         ir al estado 47
    agrupacion       ir al estado 48
    valor            ir al estado 49
    lista_condicion  ir al estado 83
    operadorlogico   ir al estado 51
    condicion        ir al estado 52
    orden            ir al estado 53


Estado 56

   14 asignacion: '=' ID @1 . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 84
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 57

   65 comen: comen ID .

    $default  reduce usando la regla 65 (comen)


Estado 58

   70 comen: comen RAIZ .

    $default  reduce usando la regla 70 (comen)


Estado 59

   66 comen: comen SI .

    $default  reduce usando la regla 66 (comen)


Estado 60

   67 comen: comen SINO .

    $default  reduce usando la regla 67 (comen)


Estado 61

   68 comen: comen PARA .

    $default  reduce usando la regla 68 (comen)


Estado 62

   69 comen: comen MIENTRAS .

    $default  reduce usando la regla 69 (comen)


Estado 63

   72 comen: comen ENTER .

    $default  reduce usando la regla 72 (comen)


Estado 64

   71 comen: comen ',' .

    $default  reduce usando la regla 71 (comen)


Estado 65

   64 comentario: '#' comen '$' .

    $default  reduce usando la regla 64 (comentario)


Estado 66

   15 definir: asignacion ',' definir .

    $default  reduce usando la regla 15 (definir)


Estado 67

   63 print: ID @17 '(' valor . $@18 ')' @19 ';'

    $default  reduce usando la regla 61 ($@18)

    $@18  ir al estado 85


Estado 68

   24 agrupacion: RAIZ '(' . expresion ')'

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 86
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 69

   40 orden: '=' '=' .

    $default  reduce usando la regla 40 (orden)


Estado 70

   44 orden: '=' '<' .

    $default  reduce usando la regla 44 (orden)


Estado 71

   45 orden: '=' '>' .

    $default  reduce usando la regla 45 (orden)


Estado 72

   17 expresion: '+' expresion . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 87
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 73

   18 expresion: '-' expresion . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 88
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 74

   20 producto: '*' expresion . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 89
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 75

   21 producto: '/' expresion . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 90
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 76

   23 agrupacion: '^' expresion . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 91
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 77

   37 operadorlogico: '|' '|' .

    $default  reduce usando la regla 37 (operadorlogico)


Estado 78

   41 orden: '!' '=' .

    $default  reduce usando la regla 41 (orden)


Estado 79

   31 ifelse: SI '(' lista_condicion ')' . $@2 '{' $@3 lineas '}' else

    $default  reduce usando la regla 29 ($@2)

    $@2  ir al estado 92


Estado 80

   34 lista_condicion: operadorlogico '(' . lista_condicion ')' '(' lista_condicion ')'

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '='     desplazar e ir al estado 35
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40
    '&'     desplazar e ir al estado 41
    '|'     desplazar e ir al estado 42
    '!'     desplazar e ir al estado 43
    '<'     desplazar e ir al estado 44
    '>'     desplazar e ir al estado 45

    expresion        ir al estado 46
    producto         ir al estado 47
    agrupacion       ir al estado 48
    valor            ir al estado 49
    lista_condicion  ir al estado 93
    operadorlogico   ir al estado 51
    condicion        ir al estado 52
    orden            ir al estado 53


Estado 81

   38 condicion: orden condicion . expresion

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40

    expresion   ir al estado 94
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49


Estado 82

   53 for: PARA '(' asignacion ';' . @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    $default  reduce usando la regla 46 (@5)

    @5  ir al estado 95


Estado 83

   59 while: MIENTRAS '(' @12 lista_condicion . @13 $@14 ')' '{' $@15 lineas $@16 '}'

    $default  reduce usando la regla 55 (@13)

    @13  ir al estado 96


Estado 84

   14 asignacion: '=' ID @1 expresion .

    $default  reduce usando la regla 14 (asignacion)


Estado 85

   63 print: ID @17 '(' valor $@18 . ')' @19 ';'

    ')'  desplazar e ir al estado 97


Estado 86

   24 agrupacion: RAIZ '(' expresion . ')'

    ')'  desplazar e ir al estado 98


Estado 87

   17 expresion: '+' expresion expresion .

    $default  reduce usando la regla 17 (expresion)


Estado 88

   18 expresion: '-' expresion expresion .

    $default  reduce usando la regla 18 (expresion)


Estado 89

   20 producto: '*' expresion expresion .

    $default  reduce usando la regla 20 (producto)


Estado 90

   21 producto: '/' expresion expresion .

    $default  reduce usando la regla 21 (producto)


Estado 91

   23 agrupacion: '^' expresion expresion .

    $default  reduce usando la regla 23 (agrupacion)


Estado 92

   31 ifelse: SI '(' lista_condicion ')' $@2 . '{' $@3 lineas '}' else

    '{'  desplazar e ir al estado 99


Estado 93

   34 lista_condicion: operadorlogico '(' lista_condicion . ')' '(' lista_condicion ')'

    ')'  desplazar e ir al estado 100


Estado 94

   38 condicion: orden condicion expresion .

    $default  reduce usando la regla 38 (condicion)


Estado 95

   53 for: PARA '(' asignacion ';' @5 . condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '='     desplazar e ir al estado 35
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40
    '!'     desplazar e ir al estado 43
    '<'     desplazar e ir al estado 44
    '>'     desplazar e ir al estado 45

    expresion   ir al estado 46
    producto    ir al estado 47
    agrupacion  ir al estado 48
    valor       ir al estado 49
    condicion   ir al estado 101
    orden       ir al estado 53


Estado 96

   59 while: MIENTRAS '(' @12 lista_condicion @13 . $@14 ')' '{' $@15 lineas $@16 '}'

    $default  reduce usando la regla 56 ($@14)

    $@14  ir al estado 102


Estado 97

   63 print: ID @17 '(' valor $@18 ')' . @19 ';'

    $default  reduce usando la regla 62 (@19)

    @19  ir al estado 103


Estado 98

   24 agrupacion: RAIZ '(' expresion ')' .

    $default  reduce usando la regla 24 (agrupacion)


Estado 99

   31 ifelse: SI '(' lista_condicion ')' $@2 '{' . $@3 lineas '}' else

    $default  reduce usando la regla 30 ($@3)

    $@3  ir al estado 104


Estado 100

   34 lista_condicion: operadorlogico '(' lista_condicion ')' . '(' lista_condicion ')'

    '('  desplazar e ir al estado 105


Estado 101

   53 for: PARA '(' asignacion ';' @5 condicion . @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    $default  reduce usando la regla 47 (@6)

    @6  ir al estado 106


Estado 102

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 . ')' '{' $@15 lineas $@16 '}'

    ')'  desplazar e ir al estado 107


Estado 103

   63 print: ID @17 '(' valor $@18 ')' @19 . ';'

    ';'  desplazar e ir al estado 108


Estado 104

   31 ifelse: SI '(' lista_condicion ')' $@2 '{' $@3 . lineas '}' else

    ID        desplazar e ir al estado 1
    SI        desplazar e ir al estado 2
    PARA      desplazar e ir al estado 3
    MIENTRAS  desplazar e ir al estado 4
    ENTER     desplazar e ir al estado 5
    '='       desplazar e ir al estado 6
    '#'       desplazar e ir al estado 7

    linea        ir al estado 9
    lineas       ir al estado 109
    estructura   ir al estado 11
    declaracion  ir al estado 12
    asignacion   ir al estado 13
    definir      ir al estado 14
    ifelse       ir al estado 15
    for          ir al estado 16
    while        ir al estado 17
    print        ir al estado 18
    comentario   ir al estado 19


Estado 105

   34 lista_condicion: operadorlogico '(' lista_condicion ')' '(' . lista_condicion ')'

    ID      desplazar e ir al estado 31
    NUM     desplazar e ir al estado 32
    RAIZ    desplazar e ir al estado 33
    STRING  desplazar e ir al estado 34
    '='     desplazar e ir al estado 35
    '+'     desplazar e ir al estado 36
    '-'     desplazar e ir al estado 37
    '*'     desplazar e ir al estado 38
    '/'     desplazar e ir al estado 39
    '^'     desplazar e ir al estado 40
    '&'     desplazar e ir al estado 41
    '|'     desplazar e ir al estado 42
    '!'     desplazar e ir al estado 43
    '<'     desplazar e ir al estado 44
    '>'     desplazar e ir al estado 45

    expresion        ir al estado 46
    producto         ir al estado 47
    agrupacion       ir al estado 48
    valor            ir al estado 49
    lista_condicion  ir al estado 110
    operadorlogico   ir al estado 51
    condicion        ir al estado 52
    orden            ir al estado 53


Estado 106

   53 for: PARA '(' asignacion ';' @5 condicion @6 . $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    $default  reduce usando la regla 48 ($@7)

    $@7  ir al estado 111


Estado 107

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' . '{' $@15 lineas $@16 '}'

    '{'  desplazar e ir al estado 112


Estado 108

   63 print: ID @17 '(' valor $@18 ')' @19 ';' .

    $default  reduce usando la regla 63 (print)


Estado 109

   31 ifelse: SI '(' lista_condicion ')' $@2 '{' $@3 lineas . '}' else

    '}'  desplazar e ir al estado 113


Estado 110

   34 lista_condicion: operadorlogico '(' lista_condicion ')' '(' lista_condicion . ')'

    ')'  desplazar e ir al estado 114


Estado 111

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 . ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    ';'  desplazar e ir al estado 115


Estado 112

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' '{' . $@15 lineas $@16 '}'

    $default  reduce usando la regla 57 ($@15)

    $@15  ir al estado 116


Estado 113

   31 ifelse: SI '(' lista_condicion ')' $@2 '{' $@3 lineas '}' . else

    SINO  desplazar e ir al estado 117

    else  ir al estado 118


Estado 114

   34 lista_condicion: operadorlogico '(' lista_condicion ')' '(' lista_condicion ')' .

    $default  reduce usando la regla 34 (lista_condicion)


Estado 115

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' . @8 asignacion @9 ')' $@10 '{' lineas $@11 '}'

    $default  reduce usando la regla 49 (@8)

    @8  ir al estado 119


Estado 116

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' '{' $@15 . lineas $@16 '}'

    ID        desplazar e ir al estado 1
    SI        desplazar e ir al estado 2
    PARA      desplazar e ir al estado 3
    MIENTRAS  desplazar e ir al estado 4
    ENTER     desplazar e ir al estado 5
    '='       desplazar e ir al estado 6
    '#'       desplazar e ir al estado 7

    linea        ir al estado 9
    lineas       ir al estado 120
    estructura   ir al estado 11
    declaracion  ir al estado 12
    asignacion   ir al estado 13
    definir      ir al estado 14
    ifelse       ir al estado 15
    for          ir al estado 16
    while        ir al estado 17
    print        ir al estado 18
    comentario   ir al estado 19


Estado 117

   33 else: SINO . $@4 '{' lineas '}'

    $default  reduce usando la regla 32 ($@4)

    $@4  ir al estado 121


Estado 118

   31 ifelse: SI '(' lista_condicion ')' $@2 '{' $@3 lineas '}' else .

    $default  reduce usando la regla 31 (ifelse)


Estado 119

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 . asignacion @9 ')' $@10 '{' lineas $@11 '}'

    '='  desplazar e ir al estado 6

    asignacion  ir al estado 122


Estado 120

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' '{' $@15 lineas . $@16 '}'

    $default  reduce usando la regla 58 ($@16)

    $@16  ir al estado 123


Estado 121

   33 else: SINO $@4 . '{' lineas '}'

    '{'  desplazar e ir al estado 124


Estado 122

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion . @9 ')' $@10 '{' lineas $@11 '}'

    $default  reduce usando la regla 50 (@9)

    @9  ir al estado 125


Estado 123

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' '{' $@15 lineas $@16 . '}'

    '}'  desplazar e ir al estado 126


Estado 124

   33 else: SINO $@4 '{' . lineas '}'

    ID        desplazar e ir al estado 1
    SI        desplazar e ir al estado 2
    PARA      desplazar e ir al estado 3
    MIENTRAS  desplazar e ir al estado 4
    ENTER     desplazar e ir al estado 5
    '='       desplazar e ir al estado 6
    '#'       desplazar e ir al estado 7

    linea        ir al estado 9
    lineas       ir al estado 127
    estructura   ir al estado 11
    declaracion  ir al estado 12
    asignacion   ir al estado 13
    definir      ir al estado 14
    ifelse       ir al estado 15
    for          ir al estado 16
    while        ir al estado 17
    print        ir al estado 18
    comentario   ir al estado 19


Estado 125

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 . ')' $@10 '{' lineas $@11 '}'

    ')'  desplazar e ir al estado 128


Estado 126

   59 while: MIENTRAS '(' @12 lista_condicion @13 $@14 ')' '{' $@15 lineas $@16 '}' .

    $default  reduce usando la regla 59 (while)


Estado 127

   33 else: SINO $@4 '{' lineas . '}'

    '}'  desplazar e ir al estado 129


Estado 128

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' . $@10 '{' lineas $@11 '}'

    $default  reduce usando la regla 51 ($@10)

    $@10  ir al estado 130


Estado 129

   33 else: SINO $@4 '{' lineas '}' .

    $default  reduce usando la regla 33 (else)


Estado 130

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 . '{' lineas $@11 '}'

    '{'  desplazar e ir al estado 131


Estado 131

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' . lineas $@11 '}'

    ID        desplazar e ir al estado 1
    SI        desplazar e ir al estado 2
    PARA      desplazar e ir al estado 3
    MIENTRAS  desplazar e ir al estado 4
    ENTER     desplazar e ir al estado 5
    '='       desplazar e ir al estado 6
    '#'       desplazar e ir al estado 7

    linea        ir al estado 9
    lineas       ir al estado 132
    estructura   ir al estado 11
    declaracion  ir al estado 12
    asignacion   ir al estado 13
    definir      ir al estado 14
    ifelse       ir al estado 15
    for          ir al estado 16
    while        ir al estado 17
    print        ir al estado 18
    comentario   ir al estado 19


Estado 132

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas . $@11 '}'

    $default  reduce usando la regla 52 ($@11)

    $@11  ir al estado 133


Estado 133

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 . '}'

    '}'  desplazar e ir al estado 134


Estado 134

   53 for: PARA '(' asignacion ';' @5 condicion @6 $@7 ';' @8 asignacion @9 ')' $@10 '{' lineas $@11 '}' .

    $default  reduce usando la regla 53 (for)
