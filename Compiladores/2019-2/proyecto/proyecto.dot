// Generado por GNU Bison 3.4.1.
// Informe de errores a <bug-bison@gnu.org>.
// PÃ¡gina web: <http://www.gnu.org/software/bison/>.

digraph "proyecto.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: . programa $end\l"]
  0 -> 1 [style=dashed label="programa"]
  0 -> 2 [style=dashed label="estructura"]
  0 -> "0R8" [style=solid]
 "0R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  1 [label="Estado 1\n\l  0 $accept: programa . $end\l"]
  1 -> 3 [style=solid label="$end"]
  2 [label="Estado 2\n\l  1 programa: estructura .\l  2 estructura: estructura . comentario\l  3           | estructura . ifelse\l  4           | estructura . while\l  5           | estructura . for\l  6           | estructura . asignacion\l  7           | estructura . declaracion\l"]
  2 -> 4 [style=solid label="ID"]
  2 -> 5 [style=solid label="SI"]
  2 -> 6 [style=solid label="MIENTRAS"]
  2 -> 7 [style=solid label="PARA"]
  2 -> 8 [style=solid label="'#'"]
  2 -> 9 [style=dashed label="declaracion"]
  2 -> 10 [style=dashed label="asignacion"]
  2 -> 11 [style=dashed label="ifelse"]
  2 -> 12 [style=dashed label="for"]
  2 -> 13 [style=dashed label="while"]
  2 -> 14 [style=dashed label="comentario"]
  2 -> "2R1" [style=solid]
 "2R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  3 [label="Estado 3\n\l  0 $accept: programa $end .\l"]
  3 -> "3R0" [style=solid]
 "3R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  4 [label="Estado 4\n\l  9 declaracion: ID . '=' expresion '(' TIPO ')' PUNTCOM\l 10 asignacion: ID . '=' expresion PUNTCOM\l"]
  4 -> 15 [style=solid label="'='"]
  5 [label="Estado 5\n\l 24 ifelse: SI . '(' list_cond ')' ':' estructura SINO ifelse\l 25       | SI . '(' list_cond ')' ':' estructura END\l"]
  5 -> 16 [style=solid label="'('"]
  6 [label="Estado 6\n\l 40 while: MIENTRAS . '(' list_cond ')' ':' estructura END\l"]
  6 -> 17 [style=solid label="'('"]
  7 [label="Estado 7\n\l 37 for: PARA . '(' asignacion condicion PUNTCOM contador ')' ':' estructura END\l 38    | PARA . ID DESDE NUM HASTA NUM ':' estructura END\l"]
  7 -> 18 [style=solid label="ID"]
  7 -> 19 [style=solid label="'('"]
  8 [label="Estado 8\n\l 41 comentario: '#' . comen '$'\l"]
  8 -> 20 [style=dashed label="comen"]
  8 -> "8R51" [style=solid]
 "8R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  9 [label="Estado 9\n\l  7 estructura: estructura declaracion .\l"]
  9 -> "9R7" [style=solid]
 "9R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  10 [label="Estado 10\n\l  6 estructura: estructura asignacion .\l"]
  10 -> "10R6" [style=solid]
 "10R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  11 [label="Estado 11\n\l  3 estructura: estructura ifelse .\l"]
  11 -> "11R3" [style=solid]
 "11R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  12 [label="Estado 12\n\l  5 estructura: estructura for .\l"]
  12 -> "12R5" [style=solid]
 "12R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  13 [label="Estado 13\n\l  4 estructura: estructura while .\l"]
  13 -> "13R4" [style=solid]
 "13R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  14 [label="Estado 14\n\l  2 estructura: estructura comentario .\l"]
  14 -> "14R2" [style=solid]
 "14R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  15 [label="Estado 15\n\l  9 declaracion: ID '=' . expresion '(' TIPO ')' PUNTCOM\l 10 asignacion: ID '=' . expresion PUNTCOM\l"]
  15 -> 21 [style=solid label="ID"]
  15 -> 22 [style=solid label="NUM"]
  15 -> 23 [style=solid label="POT"]
  15 -> 24 [style=solid label="RAIZ"]
  15 -> 25 [style=solid label="'('"]
  15 -> 26 [style=dashed label="expresion"]
  15 -> 27 [style=dashed label="producto"]
  15 -> 28 [style=dashed label="agrupacion"]
  15 -> 29 [style=dashed label="valor"]
  16 [label="Estado 16\n\l 24 ifelse: SI '(' . list_cond ')' ':' estructura SINO ifelse\l 25       | SI '(' . list_cond ')' ':' estructura END\l"]
  16 -> 21 [style=solid label="ID"]
  16 -> 22 [style=solid label="NUM"]
  16 -> 23 [style=solid label="POT"]
  16 -> 24 [style=solid label="RAIZ"]
  16 -> 25 [style=solid label="'('"]
  16 -> 30 [style=dashed label="expresion"]
  16 -> 27 [style=dashed label="producto"]
  16 -> 28 [style=dashed label="agrupacion"]
  16 -> 29 [style=dashed label="valor"]
  16 -> 31 [style=dashed label="list_cond"]
  16 -> 32 [style=dashed label="condicion"]
  16 -> "16R29" [style=solid]
 "16R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l 40 while: MIENTRAS '(' . list_cond ')' ':' estructura END\l"]
  17 -> 21 [style=solid label="ID"]
  17 -> 22 [style=solid label="NUM"]
  17 -> 23 [style=solid label="POT"]
  17 -> 24 [style=solid label="RAIZ"]
  17 -> 25 [style=solid label="'('"]
  17 -> 30 [style=dashed label="expresion"]
  17 -> 27 [style=dashed label="producto"]
  17 -> 28 [style=dashed label="agrupacion"]
  17 -> 29 [style=dashed label="valor"]
  17 -> 33 [style=dashed label="list_cond"]
  17 -> 32 [style=dashed label="condicion"]
  17 -> "17R29" [style=solid]
 "17R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  18 [label="Estado 18\n\l 38 for: PARA ID . DESDE NUM HASTA NUM ':' estructura END\l"]
  18 -> 34 [style=solid label="DESDE"]
  19 [label="Estado 19\n\l 37 for: PARA '(' . asignacion condicion PUNTCOM contador ')' ':' estructura END\l"]
  19 -> 35 [style=solid label="ID"]
  19 -> 36 [style=dashed label="asignacion"]
  20 [label="Estado 20\n\l 41 comentario: '#' comen . '$'\l 42 comen: comen . ID\l 43      | comen . SI\l 44      | comen . ','\l 45      | comen . SINO\l 46      | comen . PARA\l 47      | comen . MIENTRAS\l 48      | comen . ':'\l 49      | comen . RAIZ\l 50      | comen . POT\l"]
  20 -> 37 [style=solid label="ID"]
  20 -> 38 [style=solid label="POT"]
  20 -> 39 [style=solid label="RAIZ"]
  20 -> 40 [style=solid label="SI"]
  20 -> 41 [style=solid label="SINO"]
  20 -> 42 [style=solid label="MIENTRAS"]
  20 -> 43 [style=solid label="PARA"]
  20 -> 44 [style=solid label="','"]
  20 -> 45 [style=solid label="':'"]
  20 -> 46 [style=solid label="'$'"]
  21 [label="Estado 21\n\l 22 valor: ID .\l"]
  21 -> "21R22" [style=solid]
 "21R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  22 [label="Estado 22\n\l 21 valor: NUM .\l"]
  22 -> "22R21" [style=solid]
 "22R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  23 [label="Estado 23\n\l 18 agrupacion: POT . '(' expresion ',' expresion ')'\l"]
  23 -> 47 [style=solid label="'('"]
  24 [label="Estado 24\n\l 17 agrupacion: RAIZ . '(' expresion ')'\l"]
  24 -> 48 [style=solid label="'('"]
  25 [label="Estado 25\n\l 19 agrupacion: '(' . expresion ')'\l 23 valor: '(' . '-' NUM ')'\l"]
  25 -> 21 [style=solid label="ID"]
  25 -> 22 [style=solid label="NUM"]
  25 -> 23 [style=solid label="POT"]
  25 -> 24 [style=solid label="RAIZ"]
  25 -> 25 [style=solid label="'('"]
  25 -> 49 [style=solid label="'-'"]
  25 -> 50 [style=dashed label="expresion"]
  25 -> 27 [style=dashed label="producto"]
  25 -> 28 [style=dashed label="agrupacion"]
  25 -> 29 [style=dashed label="valor"]
  26 [label="Estado 26\n\l  9 declaracion: ID '=' expresion . '(' TIPO ')' PUNTCOM\l 10 asignacion: ID '=' expresion . PUNTCOM\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l"]
  26 -> 51 [style=solid label="PUNTCOM"]
  26 -> 52 [style=solid label="'('"]
  26 -> 53 [style=solid label="'+'"]
  26 -> 54 [style=solid label="'-'"]
  27 [label="Estado 27\n\l 13 expresion: producto .\l 14 producto: producto . '*' agrupacion\l 15         | producto . '/' agrupacion\l"]
  27 -> 55 [style=solid label="'*'"]
  27 -> 56 [style=solid label="'/'"]
  27 -> "27R13" [style=solid]
 "27R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  28 [label="Estado 28\n\l 16 producto: agrupacion .\l"]
  28 -> "28R16" [style=solid]
 "28R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 20 agrupacion: valor .\l"]
  29 -> "29R20" [style=solid]
 "29R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 30 condicion: expresion . orden expresion\l"]
  30 -> 57 [style=solid label="'='"]
  30 -> 53 [style=solid label="'+'"]
  30 -> 54 [style=solid label="'-'"]
  30 -> 58 [style=solid label="'>'"]
  30 -> 59 [style=solid label="'<'"]
  30 -> 60 [style=solid label="'!'"]
  30 -> 61 [style=dashed label="orden"]
  31 [label="Estado 31\n\l 24 ifelse: SI '(' list_cond . ')' ':' estructura SINO ifelse\l 25       | SI '(' list_cond . ')' ':' estructura END\l"]
  31 -> 62 [style=solid label="')'"]
  32 [label="Estado 32\n\l 26 list_cond: condicion . list_cond\l 27          | condicion . UNION list_cond\l 28          | condicion . INTERSECCION list_cond\l"]
  32 -> 21 [style=solid label="ID"]
  32 -> 22 [style=solid label="NUM"]
  32 -> 23 [style=solid label="POT"]
  32 -> 24 [style=solid label="RAIZ"]
  32 -> 63 [style=solid label="UNION"]
  32 -> 64 [style=solid label="INTERSECCION"]
  32 -> 25 [style=solid label="'('"]
  32 -> 30 [style=dashed label="expresion"]
  32 -> 27 [style=dashed label="producto"]
  32 -> 28 [style=dashed label="agrupacion"]
  32 -> 29 [style=dashed label="valor"]
  32 -> 65 [style=dashed label="list_cond"]
  32 -> 32 [style=dashed label="condicion"]
  32 -> "32R29" [style=solid]
 "32R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  33 [label="Estado 33\n\l 40 while: MIENTRAS '(' list_cond . ')' ':' estructura END\l"]
  33 -> 66 [style=solid label="')'"]
  34 [label="Estado 34\n\l 38 for: PARA ID DESDE . NUM HASTA NUM ':' estructura END\l"]
  34 -> 67 [style=solid label="NUM"]
  35 [label="Estado 35\n\l 10 asignacion: ID . '=' expresion PUNTCOM\l"]
  35 -> 68 [style=solid label="'='"]
  36 [label="Estado 36\n\l 37 for: PARA '(' asignacion . condicion PUNTCOM contador ')' ':' estructura END\l"]
  36 -> 21 [style=solid label="ID"]
  36 -> 22 [style=solid label="NUM"]
  36 -> 23 [style=solid label="POT"]
  36 -> 24 [style=solid label="RAIZ"]
  36 -> 25 [style=solid label="'('"]
  36 -> 30 [style=dashed label="expresion"]
  36 -> 27 [style=dashed label="producto"]
  36 -> 28 [style=dashed label="agrupacion"]
  36 -> 29 [style=dashed label="valor"]
  36 -> 69 [style=dashed label="condicion"]
  37 [label="Estado 37\n\l 42 comen: comen ID .\l"]
  37 -> "37R42" [style=solid]
 "37R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  38 [label="Estado 38\n\l 50 comen: comen POT .\l"]
  38 -> "38R50" [style=solid]
 "38R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  39 [label="Estado 39\n\l 49 comen: comen RAIZ .\l"]
  39 -> "39R49" [style=solid]
 "39R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  40 [label="Estado 40\n\l 43 comen: comen SI .\l"]
  40 -> "40R43" [style=solid]
 "40R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 45 comen: comen SINO .\l"]
  41 -> "41R45" [style=solid]
 "41R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  42 [label="Estado 42\n\l 47 comen: comen MIENTRAS .\l"]
  42 -> "42R47" [style=solid]
 "42R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 46 comen: comen PARA .\l"]
  43 -> "43R46" [style=solid]
 "43R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  44 [label="Estado 44\n\l 44 comen: comen ',' .\l"]
  44 -> "44R44" [style=solid]
 "44R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  45 [label="Estado 45\n\l 48 comen: comen ':' .\l"]
  45 -> "45R48" [style=solid]
 "45R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  46 [label="Estado 46\n\l 41 comentario: '#' comen '$' .\l"]
  46 -> "46R41" [style=solid]
 "46R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  47 [label="Estado 47\n\l 18 agrupacion: POT '(' . expresion ',' expresion ')'\l"]
  47 -> 21 [style=solid label="ID"]
  47 -> 22 [style=solid label="NUM"]
  47 -> 23 [style=solid label="POT"]
  47 -> 24 [style=solid label="RAIZ"]
  47 -> 25 [style=solid label="'('"]
  47 -> 70 [style=dashed label="expresion"]
  47 -> 27 [style=dashed label="producto"]
  47 -> 28 [style=dashed label="agrupacion"]
  47 -> 29 [style=dashed label="valor"]
  48 [label="Estado 48\n\l 17 agrupacion: RAIZ '(' . expresion ')'\l"]
  48 -> 21 [style=solid label="ID"]
  48 -> 22 [style=solid label="NUM"]
  48 -> 23 [style=solid label="POT"]
  48 -> 24 [style=solid label="RAIZ"]
  48 -> 25 [style=solid label="'('"]
  48 -> 71 [style=dashed label="expresion"]
  48 -> 27 [style=dashed label="producto"]
  48 -> 28 [style=dashed label="agrupacion"]
  48 -> 29 [style=dashed label="valor"]
  49 [label="Estado 49\n\l 23 valor: '(' '-' . NUM ')'\l"]
  49 -> 72 [style=solid label="NUM"]
  50 [label="Estado 50\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 19 agrupacion: '(' expresion . ')'\l"]
  50 -> 73 [style=solid label="')'"]
  50 -> 53 [style=solid label="'+'"]
  50 -> 54 [style=solid label="'-'"]
  51 [label="Estado 51\n\l 10 asignacion: ID '=' expresion PUNTCOM .\l"]
  51 -> "51R10" [style=solid]
 "51R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  52 [label="Estado 52\n\l  9 declaracion: ID '=' expresion '(' . TIPO ')' PUNTCOM\l"]
  52 -> 74 [style=solid label="TIPO"]
  53 [label="Estado 53\n\l 11 expresion: expresion '+' . producto\l"]
  53 -> 21 [style=solid label="ID"]
  53 -> 22 [style=solid label="NUM"]
  53 -> 23 [style=solid label="POT"]
  53 -> 24 [style=solid label="RAIZ"]
  53 -> 25 [style=solid label="'('"]
  53 -> 75 [style=dashed label="producto"]
  53 -> 28 [style=dashed label="agrupacion"]
  53 -> 29 [style=dashed label="valor"]
  54 [label="Estado 54\n\l 12 expresion: expresion '-' . producto\l"]
  54 -> 21 [style=solid label="ID"]
  54 -> 22 [style=solid label="NUM"]
  54 -> 23 [style=solid label="POT"]
  54 -> 24 [style=solid label="RAIZ"]
  54 -> 25 [style=solid label="'('"]
  54 -> 76 [style=dashed label="producto"]
  54 -> 28 [style=dashed label="agrupacion"]
  54 -> 29 [style=dashed label="valor"]
  55 [label="Estado 55\n\l 14 producto: producto '*' . agrupacion\l"]
  55 -> 21 [style=solid label="ID"]
  55 -> 22 [style=solid label="NUM"]
  55 -> 23 [style=solid label="POT"]
  55 -> 24 [style=solid label="RAIZ"]
  55 -> 25 [style=solid label="'('"]
  55 -> 77 [style=dashed label="agrupacion"]
  55 -> 29 [style=dashed label="valor"]
  56 [label="Estado 56\n\l 15 producto: producto '/' . agrupacion\l"]
  56 -> 21 [style=solid label="ID"]
  56 -> 22 [style=solid label="NUM"]
  56 -> 23 [style=solid label="POT"]
  56 -> 24 [style=solid label="RAIZ"]
  56 -> 25 [style=solid label="'('"]
  56 -> 78 [style=dashed label="agrupacion"]
  56 -> 29 [style=dashed label="valor"]
  57 [label="Estado 57\n\l 35 orden: '=' . '='\l"]
  57 -> 79 [style=solid label="'='"]
  58 [label="Estado 58\n\l 31 orden: '>' .\l 32      | '>' . '='\l"]
  58 -> 80 [style=solid label="'='"]
  58 -> "58R31" [style=solid]
 "58R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  59 [label="Estado 59\n\l 33 orden: '<' .\l 34      | '<' . '='\l"]
  59 -> 81 [style=solid label="'='"]
  59 -> "59R33" [style=solid]
 "59R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  60 [label="Estado 60\n\l 36 orden: '!' . '='\l"]
  60 -> 82 [style=solid label="'='"]
  61 [label="Estado 61\n\l 30 condicion: expresion orden . expresion\l"]
  61 -> 21 [style=solid label="ID"]
  61 -> 22 [style=solid label="NUM"]
  61 -> 23 [style=solid label="POT"]
  61 -> 24 [style=solid label="RAIZ"]
  61 -> 25 [style=solid label="'('"]
  61 -> 83 [style=dashed label="expresion"]
  61 -> 27 [style=dashed label="producto"]
  61 -> 28 [style=dashed label="agrupacion"]
  61 -> 29 [style=dashed label="valor"]
  62 [label="Estado 62\n\l 24 ifelse: SI '(' list_cond ')' . ':' estructura SINO ifelse\l 25       | SI '(' list_cond ')' . ':' estructura END\l"]
  62 -> 84 [style=solid label="':'"]
  63 [label="Estado 63\n\l 27 list_cond: condicion UNION . list_cond\l"]
  63 -> 21 [style=solid label="ID"]
  63 -> 22 [style=solid label="NUM"]
  63 -> 23 [style=solid label="POT"]
  63 -> 24 [style=solid label="RAIZ"]
  63 -> 25 [style=solid label="'('"]
  63 -> 30 [style=dashed label="expresion"]
  63 -> 27 [style=dashed label="producto"]
  63 -> 28 [style=dashed label="agrupacion"]
  63 -> 29 [style=dashed label="valor"]
  63 -> 85 [style=dashed label="list_cond"]
  63 -> 32 [style=dashed label="condicion"]
  63 -> "63R29" [style=solid]
 "63R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l 28 list_cond: condicion INTERSECCION . list_cond\l"]
  64 -> 21 [style=solid label="ID"]
  64 -> 22 [style=solid label="NUM"]
  64 -> 23 [style=solid label="POT"]
  64 -> 24 [style=solid label="RAIZ"]
  64 -> 25 [style=solid label="'('"]
  64 -> 30 [style=dashed label="expresion"]
  64 -> 27 [style=dashed label="producto"]
  64 -> 28 [style=dashed label="agrupacion"]
  64 -> 29 [style=dashed label="valor"]
  64 -> 86 [style=dashed label="list_cond"]
  64 -> 32 [style=dashed label="condicion"]
  64 -> "64R29" [style=solid]
 "64R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  65 [label="Estado 65\n\l 26 list_cond: condicion list_cond .\l"]
  65 -> "65R26" [style=solid]
 "65R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  66 [label="Estado 66\n\l 40 while: MIENTRAS '(' list_cond ')' . ':' estructura END\l"]
  66 -> 87 [style=solid label="':'"]
  67 [label="Estado 67\n\l 38 for: PARA ID DESDE NUM . HASTA NUM ':' estructura END\l"]
  67 -> 88 [style=solid label="HASTA"]
  68 [label="Estado 68\n\l 10 asignacion: ID '=' . expresion PUNTCOM\l"]
  68 -> 21 [style=solid label="ID"]
  68 -> 22 [style=solid label="NUM"]
  68 -> 23 [style=solid label="POT"]
  68 -> 24 [style=solid label="RAIZ"]
  68 -> 25 [style=solid label="'('"]
  68 -> 89 [style=dashed label="expresion"]
  68 -> 27 [style=dashed label="producto"]
  68 -> 28 [style=dashed label="agrupacion"]
  68 -> 29 [style=dashed label="valor"]
  69 [label="Estado 69\n\l 37 for: PARA '(' asignacion condicion . PUNTCOM contador ')' ':' estructura END\l"]
  69 -> 90 [style=solid label="PUNTCOM"]
  70 [label="Estado 70\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 18 agrupacion: POT '(' expresion . ',' expresion ')'\l"]
  70 -> 53 [style=solid label="'+'"]
  70 -> 54 [style=solid label="'-'"]
  70 -> 91 [style=solid label="','"]
  71 [label="Estado 71\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 17 agrupacion: RAIZ '(' expresion . ')'\l"]
  71 -> 92 [style=solid label="')'"]
  71 -> 53 [style=solid label="'+'"]
  71 -> 54 [style=solid label="'-'"]
  72 [label="Estado 72\n\l 23 valor: '(' '-' NUM . ')'\l"]
  72 -> 93 [style=solid label="')'"]
  73 [label="Estado 73\n\l 19 agrupacion: '(' expresion ')' .\l"]
  73 -> "73R19" [style=solid]
 "73R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  74 [label="Estado 74\n\l  9 declaracion: ID '=' expresion '(' TIPO . ')' PUNTCOM\l"]
  74 -> 94 [style=solid label="')'"]
  75 [label="Estado 75\n\l 11 expresion: expresion '+' producto .\l 14 producto: producto . '*' agrupacion\l 15         | producto . '/' agrupacion\l"]
  75 -> 55 [style=solid label="'*'"]
  75 -> 56 [style=solid label="'/'"]
  75 -> "75R11" [style=solid]
 "75R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  76 [label="Estado 76\n\l 12 expresion: expresion '-' producto .\l 14 producto: producto . '*' agrupacion\l 15         | producto . '/' agrupacion\l"]
  76 -> 55 [style=solid label="'*'"]
  76 -> 56 [style=solid label="'/'"]
  76 -> "76R12" [style=solid]
 "76R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  77 [label="Estado 77\n\l 14 producto: producto '*' agrupacion .\l"]
  77 -> "77R14" [style=solid]
 "77R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  78 [label="Estado 78\n\l 15 producto: producto '/' agrupacion .\l"]
  78 -> "78R15" [style=solid]
 "78R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  79 [label="Estado 79\n\l 35 orden: '=' '=' .\l"]
  79 -> "79R35" [style=solid]
 "79R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  80 [label="Estado 80\n\l 32 orden: '>' '=' .\l"]
  80 -> "80R32" [style=solid]
 "80R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 34 orden: '<' '=' .\l"]
  81 -> "81R34" [style=solid]
 "81R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 36 orden: '!' '=' .\l"]
  82 -> "82R36" [style=solid]
 "82R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  83 [label="Estado 83\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 30 condicion: expresion orden expresion .\l"]
  83 -> 53 [style=solid label="'+'"]
  83 -> 54 [style=solid label="'-'"]
  83 -> "83R30" [style=solid]
 "83R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  84 [label="Estado 84\n\l 24 ifelse: SI '(' list_cond ')' ':' . estructura SINO ifelse\l 25       | SI '(' list_cond ')' ':' . estructura END\l"]
  84 -> 95 [style=dashed label="estructura"]
  84 -> "84R8" [style=solid]
 "84R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  85 [label="Estado 85\n\l 27 list_cond: condicion UNION list_cond .\l"]
  85 -> "85R27" [style=solid]
 "85R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  86 [label="Estado 86\n\l 28 list_cond: condicion INTERSECCION list_cond .\l"]
  86 -> "86R28" [style=solid]
 "86R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  87 [label="Estado 87\n\l 40 while: MIENTRAS '(' list_cond ')' ':' . estructura END\l"]
  87 -> 96 [style=dashed label="estructura"]
  87 -> "87R8" [style=solid]
 "87R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  88 [label="Estado 88\n\l 38 for: PARA ID DESDE NUM HASTA . NUM ':' estructura END\l"]
  88 -> 97 [style=solid label="NUM"]
  89 [label="Estado 89\n\l 10 asignacion: ID '=' expresion . PUNTCOM\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l"]
  89 -> 51 [style=solid label="PUNTCOM"]
  89 -> 53 [style=solid label="'+'"]
  89 -> 54 [style=solid label="'-'"]
  90 [label="Estado 90\n\l 37 for: PARA '(' asignacion condicion PUNTCOM . contador ')' ':' estructura END\l"]
  90 -> 98 [style=solid label="ID"]
  90 -> 99 [style=dashed label="contador"]
  91 [label="Estado 91\n\l 18 agrupacion: POT '(' expresion ',' . expresion ')'\l"]
  91 -> 21 [style=solid label="ID"]
  91 -> 22 [style=solid label="NUM"]
  91 -> 23 [style=solid label="POT"]
  91 -> 24 [style=solid label="RAIZ"]
  91 -> 25 [style=solid label="'('"]
  91 -> 100 [style=dashed label="expresion"]
  91 -> 27 [style=dashed label="producto"]
  91 -> 28 [style=dashed label="agrupacion"]
  91 -> 29 [style=dashed label="valor"]
  92 [label="Estado 92\n\l 17 agrupacion: RAIZ '(' expresion ')' .\l"]
  92 -> "92R17" [style=solid]
 "92R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  93 [label="Estado 93\n\l 23 valor: '(' '-' NUM ')' .\l"]
  93 -> "93R23" [style=solid]
 "93R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  94 [label="Estado 94\n\l  9 declaracion: ID '=' expresion '(' TIPO ')' . PUNTCOM\l"]
  94 -> 101 [style=solid label="PUNTCOM"]
  95 [label="Estado 95\n\l  2 estructura: estructura . comentario\l  3           | estructura . ifelse\l  4           | estructura . while\l  5           | estructura . for\l  6           | estructura . asignacion\l  7           | estructura . declaracion\l 24 ifelse: SI '(' list_cond ')' ':' estructura . SINO ifelse\l 25       | SI '(' list_cond ')' ':' estructura . END\l"]
  95 -> 4 [style=solid label="ID"]
  95 -> 5 [style=solid label="SI"]
  95 -> 102 [style=solid label="SINO"]
  95 -> 6 [style=solid label="MIENTRAS"]
  95 -> 103 [style=solid label="END"]
  95 -> 7 [style=solid label="PARA"]
  95 -> 8 [style=solid label="'#'"]
  95 -> 9 [style=dashed label="declaracion"]
  95 -> 10 [style=dashed label="asignacion"]
  95 -> 11 [style=dashed label="ifelse"]
  95 -> 12 [style=dashed label="for"]
  95 -> 13 [style=dashed label="while"]
  95 -> 14 [style=dashed label="comentario"]
  96 [label="Estado 96\n\l  2 estructura: estructura . comentario\l  3           | estructura . ifelse\l  4           | estructura . while\l  5           | estructura . for\l  6           | estructura . asignacion\l  7           | estructura . declaracion\l 40 while: MIENTRAS '(' list_cond ')' ':' estructura . END\l"]
  96 -> 4 [style=solid label="ID"]
  96 -> 5 [style=solid label="SI"]
  96 -> 6 [style=solid label="MIENTRAS"]
  96 -> 104 [style=solid label="END"]
  96 -> 7 [style=solid label="PARA"]
  96 -> 8 [style=solid label="'#'"]
  96 -> 9 [style=dashed label="declaracion"]
  96 -> 10 [style=dashed label="asignacion"]
  96 -> 11 [style=dashed label="ifelse"]
  96 -> 12 [style=dashed label="for"]
  96 -> 13 [style=dashed label="while"]
  96 -> 14 [style=dashed label="comentario"]
  97 [label="Estado 97\n\l 38 for: PARA ID DESDE NUM HASTA NUM . ':' estructura END\l"]
  97 -> 105 [style=solid label="':'"]
  98 [label="Estado 98\n\l 39 contador: ID . '=' expresion\l"]
  98 -> 106 [style=solid label="'='"]
  99 [label="Estado 99\n\l 37 for: PARA '(' asignacion condicion PUNTCOM contador . ')' ':' estructura END\l"]
  99 -> 107 [style=solid label="')'"]
  100 [label="Estado 100\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 18 agrupacion: POT '(' expresion ',' expresion . ')'\l"]
  100 -> 108 [style=solid label="')'"]
  100 -> 53 [style=solid label="'+'"]
  100 -> 54 [style=solid label="'-'"]
  101 [label="Estado 101\n\l  9 declaracion: ID '=' expresion '(' TIPO ')' PUNTCOM .\l"]
  101 -> "101R9" [style=solid]
 "101R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  102 [label="Estado 102\n\l 24 ifelse: SI '(' list_cond ')' ':' estructura SINO . ifelse\l"]
  102 -> 5 [style=solid label="SI"]
  102 -> 109 [style=dashed label="ifelse"]
  103 [label="Estado 103\n\l 25 ifelse: SI '(' list_cond ')' ':' estructura END .\l"]
  103 -> "103R25" [style=solid]
 "103R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  104 [label="Estado 104\n\l 40 while: MIENTRAS '(' list_cond ')' ':' estructura END .\l"]
  104 -> "104R40" [style=solid]
 "104R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  105 [label="Estado 105\n\l 38 for: PARA ID DESDE NUM HASTA NUM ':' . estructura END\l"]
  105 -> 110 [style=dashed label="estructura"]
  105 -> "105R8" [style=solid]
 "105R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  106 [label="Estado 106\n\l 39 contador: ID '=' . expresion\l"]
  106 -> 21 [style=solid label="ID"]
  106 -> 22 [style=solid label="NUM"]
  106 -> 23 [style=solid label="POT"]
  106 -> 24 [style=solid label="RAIZ"]
  106 -> 25 [style=solid label="'('"]
  106 -> 111 [style=dashed label="expresion"]
  106 -> 27 [style=dashed label="producto"]
  106 -> 28 [style=dashed label="agrupacion"]
  106 -> 29 [style=dashed label="valor"]
  107 [label="Estado 107\n\l 37 for: PARA '(' asignacion condicion PUNTCOM contador ')' . ':' estructura END\l"]
  107 -> 112 [style=solid label="':'"]
  108 [label="Estado 108\n\l 18 agrupacion: POT '(' expresion ',' expresion ')' .\l"]
  108 -> "108R18" [style=solid]
 "108R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  109 [label="Estado 109\n\l 24 ifelse: SI '(' list_cond ')' ':' estructura SINO ifelse .\l"]
  109 -> "109R24" [style=solid]
 "109R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  110 [label="Estado 110\n\l  2 estructura: estructura . comentario\l  3           | estructura . ifelse\l  4           | estructura . while\l  5           | estructura . for\l  6           | estructura . asignacion\l  7           | estructura . declaracion\l 38 for: PARA ID DESDE NUM HASTA NUM ':' estructura . END\l"]
  110 -> 4 [style=solid label="ID"]
  110 -> 5 [style=solid label="SI"]
  110 -> 6 [style=solid label="MIENTRAS"]
  110 -> 113 [style=solid label="END"]
  110 -> 7 [style=solid label="PARA"]
  110 -> 8 [style=solid label="'#'"]
  110 -> 9 [style=dashed label="declaracion"]
  110 -> 10 [style=dashed label="asignacion"]
  110 -> 11 [style=dashed label="ifelse"]
  110 -> 12 [style=dashed label="for"]
  110 -> 13 [style=dashed label="while"]
  110 -> 14 [style=dashed label="comentario"]
  111 [label="Estado 111\n\l 11 expresion: expresion . '+' producto\l 12          | expresion . '-' producto\l 39 contador: ID '=' expresion .\l"]
  111 -> 53 [style=solid label="'+'"]
  111 -> 54 [style=solid label="'-'"]
  111 -> "111R39" [style=solid]
 "111R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  112 [label="Estado 112\n\l 37 for: PARA '(' asignacion condicion PUNTCOM contador ')' ':' . estructura END\l"]
  112 -> 114 [style=dashed label="estructura"]
  112 -> "112R8" [style=solid]
 "112R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  113 [label="Estado 113\n\l 38 for: PARA ID DESDE NUM HASTA NUM ':' estructura END .\l"]
  113 -> "113R38" [style=solid]
 "113R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l  2 estructura: estructura . comentario\l  3           | estructura . ifelse\l  4           | estructura . while\l  5           | estructura . for\l  6           | estructura . asignacion\l  7           | estructura . declaracion\l 37 for: PARA '(' asignacion condicion PUNTCOM contador ')' ':' estructura . END\l"]
  114 -> 4 [style=solid label="ID"]
  114 -> 5 [style=solid label="SI"]
  114 -> 6 [style=solid label="MIENTRAS"]
  114 -> 115 [style=solid label="END"]
  114 -> 7 [style=solid label="PARA"]
  114 -> 8 [style=solid label="'#'"]
  114 -> 9 [style=dashed label="declaracion"]
  114 -> 10 [style=dashed label="asignacion"]
  114 -> 11 [style=dashed label="ifelse"]
  114 -> 12 [style=dashed label="for"]
  114 -> 13 [style=dashed label="while"]
  114 -> 14 [style=dashed label="comentario"]
  115 [label="Estado 115\n\l 37 for: PARA '(' asignacion condicion PUNTCOM contador ')' ':' estructura END .\l"]
  115 -> "115R37" [style=solid]
 "115R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
}
