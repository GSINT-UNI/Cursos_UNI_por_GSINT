Terminales no usados en la gramática

    BUCLE
    BUCLE_1
    BUCLE_2
    SALTARF3
    SALTARF4
    SALTARF5
    WHILE
    SALTARF1
    SALTARF2
    SUMAR
    RESTAR
    MULTIPLICAR
    DIVIDIR
    MODULO
    PARENTESIS
    MAYOR
    MENOR
    IGUAL
    MAYOR_IGUAL
    MENOR_IGUAL
    ASIGNAR
    POSFUNCION
    SALIRFUNCION
    LLAMADAFUNC


Gramática

    0 $accept: s $end

    1 s: PROGRAMA ID ':' PROG_INICIO listaInstr PROG_FIN '.'

    2 listaInstr: asignacion listaInstr
    3           | bloque_if listaInstr
    4           | bucle_for listaInstr
    5           | bucle_while listaInstr
    6           | imprimir listaInstr
    7           | defFunc listaInstr
    8           | callFunc listaInstr
    9           | %empty

   10 @1: %empty

   11 defFunc: DEFINE ID @1 '(' args ')' '{' listaInstr '}'

   12 $@2: %empty

   13 callFunc: CALL ID $@2 '(' args ')' ';'

   14 args: args ',' ID
   15     | ID
   16     | args ',' NUM
   17     | NUM
   18     | %empty

   19 @3: %empty

   20 $@4: %empty

   21 asignacion: ID @3 '=' expresion $@4 ';'

   22 $@5: %empty

   23 @6: %empty

   24 @7: %empty

   25 $@8: %empty

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 ':' listaInstr FIN_DESDE @7 $@8

   27 @9: %empty

   28 @10: %empty

   29 $@11: %empty

   30 bucle_while: MIENTRAS '(' condicion ')' @9 ':' listaInstr FIN_MIENTRAS @10 $@11

   31 @12: %empty

   32 @13: %empty

   33 $@14: %empty

   34 bloque_if: SI '(' condicion ')' @12 ':' listaInstr FIN_SI @13 $@14 otro

   35 otro: SINO '{' listaInstr '}'
   36     | %empty

   37 condicion: expresion '>' expresion
   38          | expresion '<' expresion
   39          | expresion '=' '=' expresion
   40          | expresion '<' '>' expresion
   41          | expresion '>' '=' expresion
   42          | expresion '<' '=' expresion

   43 $@15: %empty

   44 $@16: %empty

   45 imprimir: IMPRIMIR expresion $@15 $@16 ';'

   46 expresion: expresion '+' producto
   47          | expresion '-' producto
   48          | expresion '#' producto
   49          | producto

   50 producto: producto '*' agrupacion
   51         | producto '/' agrupacion
   52         | agrupacion

   53 agrupacion: RAIZ '[' expresion ']'
   54           | POT '[' expresion ',' expresion ']'
   55           | '(' expresion ')'
   56           | valor

   57 valor: NUM
   58      | ID
   59      | '-' NUM


Terminales con las reglas donde aparecen

    $end (0) 0
    '#' (35) 48
    '(' (40) 11 13 30 34 55
    ')' (41) 11 13 30 34 55
    '*' (42) 50
    '+' (43) 46
    ',' (44) 14 16 54
    '-' (45) 47 59
    '.' (46) 1
    '/' (47) 51
    ':' (58) 1 26 30 34
    ';' (59) 13 21 45
    '<' (60) 38 40 42
    '=' (61) 21 39 41 42
    '>' (62) 37 40 41
    '[' (91) 53 54
    ']' (93) 53 54
    '{' (123) 11 35
    '}' (125) 11 35
    error (256)
    PROGRAMA (258) 1
    PROG_INICIO (259) 1
    PROG_FIN (260) 1
    DESDE (261) 26
    FIN_DESDE (262) 26
    HASTA (263) 26
    HACER (264) 26
    BUCLE (265)
    BUCLE_1 (266)
    BUCLE_2 (267)
    SALTARF3 (268)
    MIENTRAS (269) 30
    FIN_MIENTRAS (270) 30
    SALTARF4 (271)
    SALTARF5 (272)
    WHILE (273)
    SI (274) 34
    FIN_SI (275) 34
    SINO (276) 35
    SALTARF1 (277)
    SALTARF2 (278)
    SUMAR (279)
    RESTAR (280)
    MULTIPLICAR (281)
    DIVIDIR (282)
    MODULO (283)
    PARENTESIS (284)
    RAIZ (285) 53
    POT (286) 54
    MAYOR (287)
    MENOR (288)
    IGUAL (289)
    MAYOR_IGUAL (290)
    MENOR_IGUAL (291)
    IMPRIMIR (292) 45
    ASIGNAR (293)
    NUM (294) 16 17 57 59
    ID (295) 1 11 13 14 15 21 58
    DEFINE (296) 11
    CALL (297) 13
    POSFUNCION (298)
    SALIRFUNCION (299)
    LLAMADAFUNC (300)


No terminales con las reglas donde aparecen

    $accept (64)
        on left: 0
    s (65)
        on left: 1
        on right: 0
    listaInstr (66)
        on left: 2 3 4 5 6 7 8 9
        on right: 1 2 3 4 5 6 7 8 11 26 30 34 35
    defFunc (67)
        on left: 11
        on right: 7
    @1 (68)
        on left: 10
        on right: 11
    callFunc (69)
        on left: 13
        on right: 8
    $@2 (70)
        on left: 12
        on right: 13
    args (71)
        on left: 14 15 16 17 18
        on right: 11 13 14 16
    asignacion (72)
        on left: 21
        on right: 2
    @3 (73)
        on left: 19
        on right: 21
    $@4 (74)
        on left: 20
        on right: 21
    bucle_for (75)
        on left: 26
        on right: 4
    $@5 (76)
        on left: 22
        on right: 26
    @6 (77)
        on left: 23
        on right: 26
    @7 (78)
        on left: 24
        on right: 26
    $@8 (79)
        on left: 25
        on right: 26
    bucle_while (80)
        on left: 30
        on right: 5
    @9 (81)
        on left: 27
        on right: 30
    @10 (82)
        on left: 28
        on right: 30
    $@11 (83)
        on left: 29
        on right: 30
    bloque_if (84)
        on left: 34
        on right: 3
    @12 (85)
        on left: 31
        on right: 34
    @13 (86)
        on left: 32
        on right: 34
    $@14 (87)
        on left: 33
        on right: 34
    otro (88)
        on left: 35 36
        on right: 34
    condicion (89)
        on left: 37 38 39 40 41 42
        on right: 30 34
    imprimir (90)
        on left: 45
        on right: 6
    $@15 (91)
        on left: 43
        on right: 45
    $@16 (92)
        on left: 44
        on right: 45
    expresion (93)
        on left: 46 47 48 49
        on right: 21 37 38 39 40 41 42 45 46 47 48 53 54 55
    producto (94)
        on left: 50 51 52
        on right: 46 47 48 49 50 51
    agrupacion (95)
        on left: 53 54 55 56
        on right: 50 51 52
    valor (96)
        on left: 57 58 59
        on right: 26 56


Estado 0

    0 $accept: . s $end

    PROGRAMA  desplazar e ir al estado 1

    s  ir al estado 2


Estado 1

    1 s: PROGRAMA . ID ':' PROG_INICIO listaInstr PROG_FIN '.'

    ID  desplazar e ir al estado 3


Estado 2

    0 $accept: s . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 s: PROGRAMA ID . ':' PROG_INICIO listaInstr PROG_FIN '.'

    ':'  desplazar e ir al estado 5


Estado 4

    0 $accept: s $end .

    $default  aceptar


Estado 5

    1 s: PROGRAMA ID ':' . PROG_INICIO listaInstr PROG_FIN '.'

    PROG_INICIO  desplazar e ir al estado 6


Estado 6

    1 s: PROGRAMA ID ':' PROG_INICIO . listaInstr PROG_FIN '.'

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 14
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 7

   26 bucle_for: DESDE . valor HASTA valor HACER $@5 @6 ':' listaInstr FIN_DESDE @7 $@8

    NUM  desplazar e ir al estado 22
    ID   desplazar e ir al estado 23
    '-'  desplazar e ir al estado 24

    valor  ir al estado 25


Estado 8

   30 bucle_while: MIENTRAS . '(' condicion ')' @9 ':' listaInstr FIN_MIENTRAS @10 $@11

    '('  desplazar e ir al estado 26


Estado 9

   34 bloque_if: SI . '(' condicion ')' @12 ':' listaInstr FIN_SI @13 $@14 otro

    '('  desplazar e ir al estado 27


Estado 10

   45 imprimir: IMPRIMIR . expresion $@15 $@16 ';'

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 31
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 11

   21 asignacion: ID . @3 '=' expresion $@4 ';'

    $default  reduce usando la regla 19 (@3)

    @3  ir al estado 35


Estado 12

   11 defFunc: DEFINE . ID @1 '(' args ')' '{' listaInstr '}'

    ID  desplazar e ir al estado 36


Estado 13

   13 callFunc: CALL . ID $@2 '(' args ')' ';'

    ID  desplazar e ir al estado 37


Estado 14

    1 s: PROGRAMA ID ':' PROG_INICIO listaInstr . PROG_FIN '.'

    PROG_FIN  desplazar e ir al estado 38


Estado 15

    7 listaInstr: defFunc . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 39
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 16

    8 listaInstr: callFunc . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 40
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 17

    2 listaInstr: asignacion . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 41
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 18

    4 listaInstr: bucle_for . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 42
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 19

    5 listaInstr: bucle_while . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 43
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 20

    3 listaInstr: bloque_if . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 44
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 21

    6 listaInstr: imprimir . listaInstr

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 45
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 22

   57 valor: NUM .

    $default  reduce usando la regla 57 (valor)


Estado 23

   58 valor: ID .

    $default  reduce usando la regla 58 (valor)


Estado 24

   59 valor: '-' . NUM

    NUM  desplazar e ir al estado 46


Estado 25

   26 bucle_for: DESDE valor . HASTA valor HACER $@5 @6 ':' listaInstr FIN_DESDE @7 $@8

    HASTA  desplazar e ir al estado 47


Estado 26

   30 bucle_while: MIENTRAS '(' . condicion ')' @9 ':' listaInstr FIN_MIENTRAS @10 $@11

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    condicion   ir al estado 48
    expresion   ir al estado 49
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 27

   34 bloque_if: SI '(' . condicion ')' @12 ':' listaInstr FIN_SI @13 $@14 otro

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    condicion   ir al estado 50
    expresion   ir al estado 49
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 28

   53 agrupacion: RAIZ . '[' expresion ']'

    '['  desplazar e ir al estado 51


Estado 29

   54 agrupacion: POT . '[' expresion ',' expresion ']'

    '['  desplazar e ir al estado 52


Estado 30

   55 agrupacion: '(' . expresion ')'

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 53
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 31

   45 imprimir: IMPRIMIR expresion . $@15 $@16 ';'
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 43 ($@15)

    $@15  ir al estado 57


Estado 32

   49 expresion: producto .
   50 producto: producto . '*' agrupacion
   51         | producto . '/' agrupacion

    '*'  desplazar e ir al estado 58
    '/'  desplazar e ir al estado 59

    $default  reduce usando la regla 49 (expresion)


Estado 33

   52 producto: agrupacion .

    $default  reduce usando la regla 52 (producto)


Estado 34

   56 agrupacion: valor .

    $default  reduce usando la regla 56 (agrupacion)


Estado 35

   21 asignacion: ID @3 . '=' expresion $@4 ';'

    '='  desplazar e ir al estado 60


Estado 36

   11 defFunc: DEFINE ID . @1 '(' args ')' '{' listaInstr '}'

    $default  reduce usando la regla 10 (@1)

    @1  ir al estado 61


Estado 37

   13 callFunc: CALL ID . $@2 '(' args ')' ';'

    $default  reduce usando la regla 12 ($@2)

    $@2  ir al estado 62


Estado 38

    1 s: PROGRAMA ID ':' PROG_INICIO listaInstr PROG_FIN . '.'

    '.'  desplazar e ir al estado 63


Estado 39

    7 listaInstr: defFunc listaInstr .

    $default  reduce usando la regla 7 (listaInstr)


Estado 40

    8 listaInstr: callFunc listaInstr .

    $default  reduce usando la regla 8 (listaInstr)


Estado 41

    2 listaInstr: asignacion listaInstr .

    $default  reduce usando la regla 2 (listaInstr)


Estado 42

    4 listaInstr: bucle_for listaInstr .

    $default  reduce usando la regla 4 (listaInstr)


Estado 43

    5 listaInstr: bucle_while listaInstr .

    $default  reduce usando la regla 5 (listaInstr)


Estado 44

    3 listaInstr: bloque_if listaInstr .

    $default  reduce usando la regla 3 (listaInstr)


Estado 45

    6 listaInstr: imprimir listaInstr .

    $default  reduce usando la regla 6 (listaInstr)


Estado 46

   59 valor: '-' NUM .

    $default  reduce usando la regla 59 (valor)


Estado 47

   26 bucle_for: DESDE valor HASTA . valor HACER $@5 @6 ':' listaInstr FIN_DESDE @7 $@8

    NUM  desplazar e ir al estado 22
    ID   desplazar e ir al estado 23
    '-'  desplazar e ir al estado 24

    valor  ir al estado 64


Estado 48

   30 bucle_while: MIENTRAS '(' condicion . ')' @9 ':' listaInstr FIN_MIENTRAS @10 $@11

    ')'  desplazar e ir al estado 65


Estado 49

   37 condicion: expresion . '>' expresion
   38          | expresion . '<' expresion
   39          | expresion . '=' '=' expresion
   40          | expresion . '<' '>' expresion
   41          | expresion . '>' '=' expresion
   42          | expresion . '<' '=' expresion
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '='  desplazar e ir al estado 66
    '>'  desplazar e ir al estado 67
    '<'  desplazar e ir al estado 68
    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56


Estado 50

   34 bloque_if: SI '(' condicion . ')' @12 ':' listaInstr FIN_SI @13 $@14 otro

    ')'  desplazar e ir al estado 69


Estado 51

   53 agrupacion: RAIZ '[' . expresion ']'

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 70
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 52

   54 agrupacion: POT '[' . expresion ',' expresion ']'

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 71
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 53

   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto
   55 agrupacion: '(' expresion . ')'

    ')'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56


Estado 54

   46 expresion: expresion '+' . producto

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    producto    ir al estado 73
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 55

   47 expresion: expresion '-' . producto

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    producto    ir al estado 74
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 56

   48 expresion: expresion '#' . producto

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    producto    ir al estado 75
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 57

   45 imprimir: IMPRIMIR expresion $@15 . $@16 ';'

    $default  reduce usando la regla 44 ($@16)

    $@16  ir al estado 76


Estado 58

   50 producto: producto '*' . agrupacion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    agrupacion  ir al estado 77
    valor       ir al estado 34


Estado 59

   51 producto: producto '/' . agrupacion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    agrupacion  ir al estado 78
    valor       ir al estado 34


Estado 60

   21 asignacion: ID @3 '=' . expresion $@4 ';'

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 79
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 61

   11 defFunc: DEFINE ID @1 . '(' args ')' '{' listaInstr '}'

    '('  desplazar e ir al estado 80


Estado 62

   13 callFunc: CALL ID $@2 . '(' args ')' ';'

    '('  desplazar e ir al estado 81


Estado 63

    1 s: PROGRAMA ID ':' PROG_INICIO listaInstr PROG_FIN '.' .

    $default  reduce usando la regla 1 (s)


Estado 64

   26 bucle_for: DESDE valor HASTA valor . HACER $@5 @6 ':' listaInstr FIN_DESDE @7 $@8

    HACER  desplazar e ir al estado 82


Estado 65

   30 bucle_while: MIENTRAS '(' condicion ')' . @9 ':' listaInstr FIN_MIENTRAS @10 $@11

    $default  reduce usando la regla 27 (@9)

    @9  ir al estado 83


Estado 66

   39 condicion: expresion '=' . '=' expresion

    '='  desplazar e ir al estado 84


Estado 67

   37 condicion: expresion '>' . expresion
   41          | expresion '>' . '=' expresion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '='   desplazar e ir al estado 85
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 86
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 68

   38 condicion: expresion '<' . expresion
   40          | expresion '<' . '>' expresion
   42          | expresion '<' . '=' expresion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '='   desplazar e ir al estado 87
    '>'   desplazar e ir al estado 88
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 89
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 69

   34 bloque_if: SI '(' condicion ')' . @12 ':' listaInstr FIN_SI @13 $@14 otro

    $default  reduce usando la regla 31 (@12)

    @12  ir al estado 90


Estado 70

   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto
   53 agrupacion: RAIZ '[' expresion . ']'

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56
    ']'  desplazar e ir al estado 91


Estado 71

   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto
   54 agrupacion: POT '[' expresion . ',' expresion ']'

    ','  desplazar e ir al estado 92
    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56


Estado 72

   55 agrupacion: '(' expresion ')' .

    $default  reduce usando la regla 55 (agrupacion)


Estado 73

   46 expresion: expresion '+' producto .
   50 producto: producto . '*' agrupacion
   51         | producto . '/' agrupacion

    '*'  desplazar e ir al estado 58
    '/'  desplazar e ir al estado 59

    $default  reduce usando la regla 46 (expresion)


Estado 74

   47 expresion: expresion '-' producto .
   50 producto: producto . '*' agrupacion
   51         | producto . '/' agrupacion

    '*'  desplazar e ir al estado 58
    '/'  desplazar e ir al estado 59

    $default  reduce usando la regla 47 (expresion)


Estado 75

   48 expresion: expresion '#' producto .
   50 producto: producto . '*' agrupacion
   51         | producto . '/' agrupacion

    '*'  desplazar e ir al estado 58
    '/'  desplazar e ir al estado 59

    $default  reduce usando la regla 48 (expresion)


Estado 76

   45 imprimir: IMPRIMIR expresion $@15 $@16 . ';'

    ';'  desplazar e ir al estado 93


Estado 77

   50 producto: producto '*' agrupacion .

    $default  reduce usando la regla 50 (producto)


Estado 78

   51 producto: producto '/' agrupacion .

    $default  reduce usando la regla 51 (producto)


Estado 79

   21 asignacion: ID @3 '=' expresion . $@4 ';'
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 20 ($@4)

    $@4  ir al estado 94


Estado 80

   11 defFunc: DEFINE ID @1 '(' . args ')' '{' listaInstr '}'

    NUM  desplazar e ir al estado 95
    ID   desplazar e ir al estado 96

    $default  reduce usando la regla 18 (args)

    args  ir al estado 97


Estado 81

   13 callFunc: CALL ID $@2 '(' . args ')' ';'

    NUM  desplazar e ir al estado 95
    ID   desplazar e ir al estado 96

    $default  reduce usando la regla 18 (args)

    args  ir al estado 98


Estado 82

   26 bucle_for: DESDE valor HASTA valor HACER . $@5 @6 ':' listaInstr FIN_DESDE @7 $@8

    $default  reduce usando la regla 22 ($@5)

    $@5  ir al estado 99


Estado 83

   30 bucle_while: MIENTRAS '(' condicion ')' @9 . ':' listaInstr FIN_MIENTRAS @10 $@11

    ':'  desplazar e ir al estado 100


Estado 84

   39 condicion: expresion '=' '=' . expresion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 101
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 85

   41 condicion: expresion '>' '=' . expresion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 102
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 86

   37 condicion: expresion '>' expresion .
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 37 (condicion)


Estado 87

   42 condicion: expresion '<' '=' . expresion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 103
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 88

   40 condicion: expresion '<' '>' . expresion

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 104
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 89

   38 condicion: expresion '<' expresion .
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 38 (condicion)


Estado 90

   34 bloque_if: SI '(' condicion ')' @12 . ':' listaInstr FIN_SI @13 $@14 otro

    ':'  desplazar e ir al estado 105


Estado 91

   53 agrupacion: RAIZ '[' expresion ']' .

    $default  reduce usando la regla 53 (agrupacion)


Estado 92

   54 agrupacion: POT '[' expresion ',' . expresion ']'

    RAIZ  desplazar e ir al estado 28
    POT   desplazar e ir al estado 29
    NUM   desplazar e ir al estado 22
    ID    desplazar e ir al estado 23
    '('   desplazar e ir al estado 30
    '-'   desplazar e ir al estado 24

    expresion   ir al estado 106
    producto    ir al estado 32
    agrupacion  ir al estado 33
    valor       ir al estado 34


Estado 93

   45 imprimir: IMPRIMIR expresion $@15 $@16 ';' .

    $default  reduce usando la regla 45 (imprimir)


Estado 94

   21 asignacion: ID @3 '=' expresion $@4 . ';'

    ';'  desplazar e ir al estado 107


Estado 95

   17 args: NUM .

    $default  reduce usando la regla 17 (args)


Estado 96

   15 args: ID .

    $default  reduce usando la regla 15 (args)


Estado 97

   11 defFunc: DEFINE ID @1 '(' args . ')' '{' listaInstr '}'
   14 args: args . ',' ID
   16     | args . ',' NUM

    ')'  desplazar e ir al estado 108
    ','  desplazar e ir al estado 109


Estado 98

   13 callFunc: CALL ID $@2 '(' args . ')' ';'
   14 args: args . ',' ID
   16     | args . ',' NUM

    ')'  desplazar e ir al estado 110
    ','  desplazar e ir al estado 109


Estado 99

   26 bucle_for: DESDE valor HASTA valor HACER $@5 . @6 ':' listaInstr FIN_DESDE @7 $@8

    $default  reduce usando la regla 23 (@6)

    @6  ir al estado 111


Estado 100

   30 bucle_while: MIENTRAS '(' condicion ')' @9 ':' . listaInstr FIN_MIENTRAS @10 $@11

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 112
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 101

   39 condicion: expresion '=' '=' expresion .
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 39 (condicion)


Estado 102

   41 condicion: expresion '>' '=' expresion .
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 41 (condicion)


Estado 103

   42 condicion: expresion '<' '=' expresion .
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 42 (condicion)


Estado 104

   40 condicion: expresion '<' '>' expresion .
   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56

    $default  reduce usando la regla 40 (condicion)


Estado 105

   34 bloque_if: SI '(' condicion ')' @12 ':' . listaInstr FIN_SI @13 $@14 otro

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 113
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 106

   46 expresion: expresion . '+' producto
   47          | expresion . '-' producto
   48          | expresion . '#' producto
   54 agrupacion: POT '[' expresion ',' expresion . ']'

    '+'  desplazar e ir al estado 54
    '-'  desplazar e ir al estado 55
    '#'  desplazar e ir al estado 56
    ']'  desplazar e ir al estado 114


Estado 107

   21 asignacion: ID @3 '=' expresion $@4 ';' .

    $default  reduce usando la regla 21 (asignacion)


Estado 108

   11 defFunc: DEFINE ID @1 '(' args ')' . '{' listaInstr '}'

    '{'  desplazar e ir al estado 115


Estado 109

   14 args: args ',' . ID
   16     | args ',' . NUM

    NUM  desplazar e ir al estado 116
    ID   desplazar e ir al estado 117


Estado 110

   13 callFunc: CALL ID $@2 '(' args ')' . ';'

    ';'  desplazar e ir al estado 118


Estado 111

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 . ':' listaInstr FIN_DESDE @7 $@8

    ':'  desplazar e ir al estado 119


Estado 112

   30 bucle_while: MIENTRAS '(' condicion ')' @9 ':' listaInstr . FIN_MIENTRAS @10 $@11

    FIN_MIENTRAS  desplazar e ir al estado 120


Estado 113

   34 bloque_if: SI '(' condicion ')' @12 ':' listaInstr . FIN_SI @13 $@14 otro

    FIN_SI  desplazar e ir al estado 121


Estado 114

   54 agrupacion: POT '[' expresion ',' expresion ']' .

    $default  reduce usando la regla 54 (agrupacion)


Estado 115

   11 defFunc: DEFINE ID @1 '(' args ')' '{' . listaInstr '}'

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 122
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 116

   16 args: args ',' NUM .

    $default  reduce usando la regla 16 (args)


Estado 117

   14 args: args ',' ID .

    $default  reduce usando la regla 14 (args)


Estado 118

   13 callFunc: CALL ID $@2 '(' args ')' ';' .

    $default  reduce usando la regla 13 (callFunc)


Estado 119

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 ':' . listaInstr FIN_DESDE @7 $@8

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 123
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 120

   30 bucle_while: MIENTRAS '(' condicion ')' @9 ':' listaInstr FIN_MIENTRAS . @10 $@11

    $default  reduce usando la regla 28 (@10)

    @10  ir al estado 124


Estado 121

   34 bloque_if: SI '(' condicion ')' @12 ':' listaInstr FIN_SI . @13 $@14 otro

    $default  reduce usando la regla 32 (@13)

    @13  ir al estado 125


Estado 122

   11 defFunc: DEFINE ID @1 '(' args ')' '{' listaInstr . '}'

    '}'  desplazar e ir al estado 126


Estado 123

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 ':' listaInstr . FIN_DESDE @7 $@8

    FIN_DESDE  desplazar e ir al estado 127


Estado 124

   30 bucle_while: MIENTRAS '(' condicion ')' @9 ':' listaInstr FIN_MIENTRAS @10 . $@11

    $default  reduce usando la regla 29 ($@11)

    $@11  ir al estado 128


Estado 125

   34 bloque_if: SI '(' condicion ')' @12 ':' listaInstr FIN_SI @13 . $@14 otro

    $default  reduce usando la regla 33 ($@14)

    $@14  ir al estado 129


Estado 126

   11 defFunc: DEFINE ID @1 '(' args ')' '{' listaInstr '}' .

    $default  reduce usando la regla 11 (defFunc)


Estado 127

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 ':' listaInstr FIN_DESDE . @7 $@8

    $default  reduce usando la regla 24 (@7)

    @7  ir al estado 130


Estado 128

   30 bucle_while: MIENTRAS '(' condicion ')' @9 ':' listaInstr FIN_MIENTRAS @10 $@11 .

    $default  reduce usando la regla 30 (bucle_while)


Estado 129

   34 bloque_if: SI '(' condicion ')' @12 ':' listaInstr FIN_SI @13 $@14 . otro

    SINO  desplazar e ir al estado 131

    $default  reduce usando la regla 36 (otro)

    otro  ir al estado 132


Estado 130

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 ':' listaInstr FIN_DESDE @7 . $@8

    $default  reduce usando la regla 25 ($@8)

    $@8  ir al estado 133


Estado 131

   35 otro: SINO . '{' listaInstr '}'

    '{'  desplazar e ir al estado 134


Estado 132

   34 bloque_if: SI '(' condicion ')' @12 ':' listaInstr FIN_SI @13 $@14 otro .

    $default  reduce usando la regla 34 (bloque_if)


Estado 133

   26 bucle_for: DESDE valor HASTA valor HACER $@5 @6 ':' listaInstr FIN_DESDE @7 $@8 .

    $default  reduce usando la regla 26 (bucle_for)


Estado 134

   35 otro: SINO '{' . listaInstr '}'

    DESDE     desplazar e ir al estado 7
    MIENTRAS  desplazar e ir al estado 8
    SI        desplazar e ir al estado 9
    IMPRIMIR  desplazar e ir al estado 10
    ID        desplazar e ir al estado 11
    DEFINE    desplazar e ir al estado 12
    CALL      desplazar e ir al estado 13

    $default  reduce usando la regla 9 (listaInstr)

    listaInstr   ir al estado 135
    defFunc      ir al estado 15
    callFunc     ir al estado 16
    asignacion   ir al estado 17
    bucle_for    ir al estado 18
    bucle_while  ir al estado 19
    bloque_if    ir al estado 20
    imprimir     ir al estado 21


Estado 135

   35 otro: SINO '{' listaInstr . '}'

    '}'  desplazar e ir al estado 136


Estado 136

   35 otro: SINO '{' listaInstr '}' .

    $default  reduce usando la regla 35 (otro)
